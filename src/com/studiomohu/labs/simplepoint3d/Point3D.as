package com.studiomohu.labs.simplepoint3d {	import flash.geom.Rectangle;		import flash.display.BitmapData;		import flash.display.Bitmap;		import flash.filters.BitmapFilterQuality;		import flash.display.GradientType;		import flash.display.SpreadMethod;		import flash.geom.Matrix;		import com.studiomohu.core.util.Spy;		import flash.filters.BlurFilter;		import flash.display.Sprite;	/**	 * @author arthurcomben	 */	public class Point3D extends Sprite 	{		public var rx : Number;		public var ry : Number;		public var rz : Number;		public var r : Number;		public var a : Number = 0;		private var varsVO : VarsVO;		public function Point3D ( x : Number, y : Number, z : Number, r : Number, varsVO : VarsVO )		{			this.rx = x;			this.ry = y;			this.rz = z;			this.r = r;			this.varsVO = varsVO;			a = Math.atan2( x, z );						render( );			move( );			visibleCheck( );		}		public function move ( ) : void		{			var s : Number = varsVO.focalDepth / ( varsVO.focalDepth + rz );			x = rx * s;			y = ry * s;			scaleX = scaleY = s;		}		public function visibleCheck ( ) : void		{			if( y > 225 )			{				visible = false;			}			else if( y < -225 )			{				visible = false;			}			else			{				if( x > 300 )				{					visible = false;				}				else if( x < -300)				{					visible = false;				}				else				{					visible = true;				}			}		}				public function render() : void		{			var fillType : String = GradientType.RADIAL;			var colors : Array = [ 0xffffff, 0xf30380 ];			var alphas : Array = [ 1, 1 ];			var ratios : Array = [ 0x37, 0X55 ];			var matr : Matrix = new Matrix( );			matr.createGradientBox( 20, 20, 0, -15, -15 );			var spreadMethod : String = SpreadMethod.PAD;			this.graphics.clear();			this.graphics.beginGradientFill( fillType, colors, alphas, ratios, matr, spreadMethod );  			this.graphics.drawCircle( 0, 0, varsVO.radius );			this.graphics.endFill( );		}	}}