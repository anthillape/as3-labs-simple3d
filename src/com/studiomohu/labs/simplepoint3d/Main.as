package com.studiomohu.labs.simplepoint3d{	import com.studiomohu.labs.generic.LabsSlider;		import flash.display.StageQuality;		import com.flashdynamix.utils.SWFProfiler;		import com.studiomohu.labs.generic.LabsSurround;		import flash.events.Event;		import com.studiomohu.core.util.Spy;		import com.studiomohu.core.util.SetupDefault;		import flash.display.Sprite;	/**	 * @author arthurcomben	 */	public class Main extends Sprite 	{		private var content : Sprite;		private var spy : Sprite;		private var a : Array;		private var t : Array;		private var holderHolder : Sprite;		private var holder : Sprite;		private var surround : LabsSurround;		private var speed : Number = 0;		private var l : int;		private var controlWidth : Number;		private var varsVO : VarsVO;		public function Main ()		{			SetupDefault.setup( stage );						varsVO = new VarsVO( );			content = new Sprite( );			spy = new Sprite( );			surround = new LabsSurround( );			holder = new Sprite( );			holderHolder = new Sprite( );						addChild( content );			addChild( spy );			addChild( surround );			content.addChild( holderHolder );			holderHolder.addChild( holder );						addEventListener( Event.ADDED_TO_STAGE, handleAddedToStage );		}		private function handleAddedToStage (event : Event) : void		{			init( );		}		private function init () : void		{			SWFProfiler.init( this.stage, this );			stage.quality = StageQuality.HIGH;			controlWidth = 610 * .5;			Spy.registerOverlay( spy, .1, .1, .8, .8 );						surround.init( "Simple 3D 1 : 3d Points" );						var focusSlider : LabsSlider = new LabsSlider( "focal depth", varsVO, "focalDepth", 100, 500 );			var radiusSlider : LabsSlider = new LabsSlider( "sphere radius", varsVO, "radius", 1, 20 );			surround.getControlPanel( ).getPanel( ).addChild( focusSlider );			surround.getControlPanel( ).getPanel( ).addChild( radiusSlider );			radiusSlider.x = focusSlider.x + focusSlider.width;			radiusSlider.addEventListener( Event.CHANGE, handleChangeRadius, false, 0, true );						holder.x = 305;			holder.y = 225;						t = new Array( );			var n : Number = 35;						a = new Array( );			createPoints( n, 0, 0, 0 );			createPoints( n, 0, 0, n * 2 );			createPoints( n, 0, 0, -n * 2 );						createPoints( n, 0, n * 2, n * 2 );			createPoints( n, 0, n * 2, -n * 2 );						createPoints( n, 0, -n * 2, n * 2 );			createPoints( n, 0, -n * 2, -n * 2 );			l = a.length;						this.addEventListener( Event.ENTER_FRAME, loop, false, 0, true );		}		private function loop ( e : Event ) : void		{			a.sortOn( "rz", Array.NUMERIC );			var i : int = l - 1;			speed += (this.mouseX - controlWidth - speed) * .001;			speed *= .9;			speed = Math.max( Math.min( speed, .04 ), -.04 );			for (; i >= 0 ; i--)			{				var p : Point3D = Point3D( a[i] );				holder.removeChild( p );				holder.addChild( p );				p.a += speed;				p.rx = p.r * Math.cos( p.a );				p.rz = p.r * Math.sin( p.a );				p.move( );				p.visibleCheck( );			}		}		private function createPoints ( d : Number, dx : Number, dy : Number, dz : Number ) : void		{			var i : int = 0;			var l : int = 5;			for (; i < l ; i++)			{				var j : int = 0;				var k : int = 5;				for (; j < k ; j++)				{					var n : int = 0;					var m : int = 5;					for (; n < m ; n++)					{						var x : Number = i * d * .5 - d + dx;						var y : Number = j * d * .5 - d + dy;						var z : Number = n * d * .5 - d + dz;						createPoint( x, y, z );					}				}			}		}		private function createPoint ( x : Number, y : Number, z : Number ) : void		{			var r : Number = Math.sqrt( x * x + z * z );			var p : Point3D = new Point3D( x, y, z, r, varsVO );			a.push( p );			holder.addChild( p );		}		private function handleChangeRadius ( e : Event ) : void		{			var i : int = 0;			var l : int = a.length;			for (; i < l ; i++)			{				var p : Point3D = a[i];				p.render( );			}		}	}}